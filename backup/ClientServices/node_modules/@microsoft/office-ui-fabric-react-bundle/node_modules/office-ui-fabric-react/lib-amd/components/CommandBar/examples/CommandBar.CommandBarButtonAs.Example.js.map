{"version":3,"file":"CommandBar.CommandBarButtonAs.Example.js","sourceRoot":"../src/","sources":["components/CommandBar/examples/CommandBar.CommandBarButtonAs.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBar, ICommandBarItemProps } from 'office-ui-fabric-react/lib/CommandBar';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Coachmark } from 'office-ui-fabric-react/lib/Coachmark';\nimport { IComponentAsProps, IComponentAs } from 'office-ui-fabric-react/lib/Utilities';\nimport { TeachingBubbleContent } from 'office-ui-fabric-react/lib/TeachingBubble';\nimport { CommandBarButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\n\ninterface IIndividualCommandBarButtonAsExampleProps {\n  onDismissCoachmark: () => void;\n  isCoachmarkVisible: boolean;\n}\n\ninterface ICoachmarkCommandBarButtonProps extends IComponentAsProps<ICommandBarItemProps> {\n  onDismiss: () => void;\n  isCoachmarkVisible?: boolean;\n}\n\n/** Command bar button with a coachmark and teaching bubble */\nconst CoachmarkCommandBarButton: React.FunctionComponent<ICoachmarkCommandBarButtonProps> = props => {\n  const targetButton = React.useRef<HTMLDivElement | null>(null);\n  const { defaultRender, isCoachmarkVisible, onDismiss, ...buttonProps } = props;\n  const ButtonComponent = defaultRender || CommandBarButton;\n\n  return (\n    <>\n      <div ref={targetButton}>\n        <ButtonComponent {...buttonProps as any} />\n      </div>\n      {isCoachmarkVisible && (\n        <Coachmark\n          target={targetButton.current}\n          positioningContainerProps={{\n            directionalHint: DirectionalHint.bottomCenter\n          }}\n          ariaAlertText=\"A Coachmark has appeared\"\n          ariaDescribedBy=\"coachmark-desc1\"\n          ariaLabelledBy=\"coachmark-label1\"\n          ariaLabelledByText=\"Coachmark notification\"\n        >\n          <TeachingBubbleContent\n            headline=\"Example Title\"\n            hasCloseIcon={true}\n            closeButtonAriaLabel=\"Close\"\n            onDismiss={onDismiss}\n            ariaDescribedBy=\"example-description1\"\n            ariaLabelledBy=\"example-label1\"\n          >\n            Welcome to the land of Coachmarks!\n          </TeachingBubbleContent>\n        </Coachmark>\n      )}\n    </>\n  );\n};\n\nconst overflowButtonProps: IButtonProps = {\n  ariaLabel: 'More commands'\n};\n\n/** Command bar which renders the Share button with a coachmark */\nconst IndividualCommandBarButtonAsExample: React.FunctionComponent<IIndividualCommandBarButtonAsExampleProps> = props => {\n  const { onDismissCoachmark, isCoachmarkVisible } = props;\n  const items: ICommandBarItemProps[] = React.useMemo(() => {\n    const CoachmarkButtonWrapper: IComponentAs<ICommandBarItemProps> = (p: IComponentAsProps<ICommandBarItemProps>) => {\n      return <CoachmarkCommandBarButton {...p} isCoachmarkVisible={isCoachmarkVisible} onDismiss={onDismissCoachmark} />;\n    };\n\n    return [\n      { key: 'newItem', text: 'New', iconProps: { iconName: 'Add' }, onClick: () => console.log('New') },\n      { key: 'upload', text: 'Upload', iconProps: { iconName: 'Upload' }, onClick: () => console.log('Upload') },\n      {\n        key: 'share',\n        text: 'Share',\n        iconProps: { iconName: 'Share' },\n        // The Share button will have a coachmark\n        commandBarButtonAs: CoachmarkButtonWrapper,\n        onClick: () => console.log('Share')\n      },\n      { key: 'download', text: 'Download', iconProps: { iconName: 'Download' }, onClick: () => console.log('Download') }\n    ];\n  }, [props.onDismissCoachmark, props.isCoachmarkVisible]);\n\n  return (\n    <CommandBar\n      overflowButtonProps={overflowButtonProps}\n      items={items}\n      ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n    />\n  );\n};\n\nexport const IndividualCommandBarButtonAsExampleWrapper: React.FunctionComponent = () => {\n  const [isCoachmarkVisible, setIsCoachmarkVisible] = React.useState(true);\n\n  const onDismissCoachmark = React.useCallback(() => setIsCoachmarkVisible(false), []);\n\n  return <IndividualCommandBarButtonAsExample onDismissCoachmark={onDismissCoachmark} isCoachmarkVisible={isCoachmarkVisible} />;\n};\n"]}