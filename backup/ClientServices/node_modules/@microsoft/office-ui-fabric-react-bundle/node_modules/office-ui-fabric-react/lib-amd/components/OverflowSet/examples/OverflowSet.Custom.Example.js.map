{"version":3,"file":"OverflowSet.Custom.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Custom.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBarButton, IButtonStyles, IOverflowSetItemProps, OverflowSet, Checkbox } from 'office-ui-fabric-react';\n\nconst noOp = () => undefined;\n\nconst checkboxStyles = {\n  root: {\n    marginRight: 5\n  }\n};\n\nexport class OverflowSetCustomExample extends React.PureComponent {\n  public render(): JSX.Element {\n    return (\n      <OverflowSet\n        aria-label=\"Custom Example\"\n        items={[\n          {\n            key: 'checkbox',\n            onRender: () => {\n              return <Checkbox role=\"menuitem\" label=\"A Checkbox\" styles={checkboxStyles} />;\n            }\n          },\n          {\n            key: 'newItem',\n            name: 'New',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: noOp,\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            }\n          },\n          {\n            key: 'upload',\n            name: 'Upload',\n            icon: 'Upload',\n            onClick: noOp\n          },\n          {\n            key: 'share',\n            name: 'Share',\n            icon: 'Share',\n            onClick: noOp\n          }\n        ]}\n        overflowItems={[\n          {\n            key: 'move',\n            name: 'Move to...',\n            icon: 'MoveToFolder',\n            onClick: noOp\n          },\n          {\n            key: 'copy',\n            name: 'Copy to...',\n            icon: 'Copy',\n            onClick: noOp\n          },\n          {\n            key: 'rename',\n            name: 'Rename...',\n            icon: 'Edit',\n            onClick: noOp\n          },\n          {\n            key: 'disabled',\n            name: 'Disabled...',\n            icon: 'Cancel',\n            disabled: true,\n            onClick: noOp\n          }\n        ]}\n        onRenderOverflowButton={this._onRenderOverflowButton}\n        onRenderItem={this._onRenderItem}\n      />\n    );\n  }\n\n  private _onRenderItem = (item: IOverflowSetItemProps): JSX.Element => {\n    if (item.onRender) {\n      return item.onRender(item);\n    }\n    return <CommandBarButton role=\"menuitem\" iconProps={{ iconName: item.icon }} menuProps={item.subMenuProps} text={item.name} />;\n  };\n\n  private _onRenderOverflowButton = (overflowItems: any[] | undefined): JSX.Element => {\n    const buttonStyles: Partial<IButtonStyles> = {\n      root: {\n        minWidth: 0,\n        padding: '0 4px',\n        alignSelf: 'stretch',\n        height: 'auto'\n      }\n    };\n    return (\n      <CommandBarButton\n        ariaLabel=\"More items\"\n        role=\"menuitem\"\n        styles={buttonStyles}\n        menuIconProps={{ iconName: 'More' }}\n        menuProps={{ items: overflowItems! }}\n      />\n    );\n  };\n}\n"]}