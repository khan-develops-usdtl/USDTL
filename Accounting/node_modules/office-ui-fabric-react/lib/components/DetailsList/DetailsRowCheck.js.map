{"version":3,"file":"DetailsRowCheck.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IDetailsRowCheckProps, IDetailsCheckboxProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles } from './DetailsRowCheck.types';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check, getCheck } from '../../Check';\nimport { ICheckStyleProps, ICheckStyles } from '../Check/Check.types';\nimport { getStyles as getCheckStyles } from '../Check/Check.styles';\nimport { getStyles } from './DetailsRowCheck.styles';\n\nconst getCheckClassNames = classNamesFunction<ICheckStyleProps, ICheckStyles>({\n  disableCaching: true\n});\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>({\n  disableCaching: true\n});\n\nconst DetailsRowCheckBase: React.StatelessComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    isSelected = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  const onRenderCheckbox = onRenderDetailsCheckbox || defaultCheckboxRender;\n\n  const isPressed = isSelected || selected;\n\n  const checkStyles = useFastIcons ? undefined : getCheckStyles({ theme: theme! });\n\n  const checkClassNames = useFastIcons\n    ? undefined\n    : getCheckClassNames(checkStyles, {\n        theme: theme!\n      });\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected: isPressed,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n    useGlobalCheckHostClass: useFastIcons\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: isPressed,\n    theme\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      className={css(classNames.root, classNames.check, checkClassNames && checkClassNames.checkHost)}\n      aria-checked={isPressed}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n    >\n      {onRenderCheckbox(detailsCheckboxProps, defaultCheckboxRender)}\n    </div>\n  ) : (\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return getCheck(checkboxProps.theme, checkboxProps.checked);\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true\n);\n"]}